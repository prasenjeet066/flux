{
  "version": 3,
  "sources": ["../../src/cli/create-project.js"],
  "sourcesContent": ["// flux-core/src/cli/create-project.js\n// Project scaffolding utility\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst TEMPLATES = {\n  default: {\n    name: 'Default Template',\n    description: 'Basic Flux application with routing and state management',\n    files: {\n      'flux.config.js': `export default {\n  name: '{{projectName}}',\n  version: '1.0.0',\n  entry: 'src/app.flux',\n  output: 'dist',\n  target: 'js',\n  minify: false,\n  sourceMaps: true,\n  appDir: '.flux',\n  publicDir: 'public'\n};`,\n      \n      'src/app.flux': `component App {\n  render {\n    <div class=\"app\">\n      <header class=\"header\">\n        <h1>{{projectName}}</h1>\n        <nav>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/about\">About</Link>\n        </nav>\n      </header>\n      \n      <main class=\"main\">\n        <Router>\n          <Route path=\"/\" component={HomePage} />\n          <Route path=\"/about\" component={AboutPage} />\n        </Router>\n      </main>\n    </div>\n  }\n}\n\nstyles App {\n  .app {\n    min-height: 100vh\n    display: flex\n    flex-direction: column\n  }\n  \n  .header {\n    background: #2c3e50\n    color: white\n    padding: 1rem\n    display: flex\n    justify-content: space-between\n    align-items: center\n    \n    h1 {\n      margin: 0\n      font-size: 1.5rem\n    }\n    \n    nav {\n      display: flex\n      gap: 1rem\n      \n      a {\n        color: white\n        text-decoration: none\n        padding: 0.5rem 1rem\n        border-radius: 4px\n        transition: background-color 0.2s\n        \n        &:hover {\n          background: rgba(255, 255, 255, 0.1)\n        }\n      }\n    }\n  }\n  \n  .main {\n    flex: 1\n    padding: 2rem\n  }\n}\n\n// Mount the app\nmount(App, '#root')`,\n      \n      'src/pages/home.flux': `@route(\"/\")\ncomponent HomePage {\n  state message = \"Welcome to {{projectName}}!\"\n  \n  render {\n    <div class=\"home\">\n      <h2>{message}</h2>\n      <p>This is a Flux application. Start building something amazing!</p>\n      <Counter />\n    </div>\n  }\n}\n\nstyles HomePage {\n  .home {\n    text-align: center\n    max-width: 600px\n    margin: 0 auto\n    \n    h2 {\n      color: #2c3e50\n      margin-bottom: 1rem\n    }\n    \n    p {\n      color: #7f8c8d\n      margin-bottom: 2rem\n    }\n  }\n}`,\n      \n      'src/pages/about.flux': `@route(\"/about\")\ncomponent AboutPage {\n  render {\n    <div class=\"about\">\n      <h2>About {{projectName}}</h2>\n      <p>This is an example Flux application demonstrating the language's features.</p>\n      <ul>\n        <li>Component-based architecture</li>\n        <li>Built-in routing</li>\n        <li>Reactive state management</li>\n        <li>Scoped styling</li>\n      </ul>\n    </div>\n  }\n}\n\nstyles AboutPage {\n  .about {\n    max-width: 600px\n    margin: 0 auto\n    \n    h2 {\n      color: #2c3e50\n      margin-bottom: 1rem\n    }\n    \n    p {\n      color: #7f8c8d\n      margin-bottom: 1rem\n    }\n    \n    ul {\n      text-align: left\n      color: #34495e\n      \n      li {\n        margin-bottom: 0.5rem\n      }\n    }\n  }\n}`,\n      \n      'src/components/Counter.flux': `component Counter {\n  state count = 0\n  \n  method increment() {\n    count += 1\n  }\n  \n  method decrement() {\n    count -= 1\n  }\n  \n  render {\n    <div class=\"counter\">\n      <h3>Counter: {count}</h3>\n      <div class=\"buttons\">\n        <button @click={decrement}>-</button>\n        <button @click={increment}>+</button>\n      </div>\n    </div>\n  }\n}\n\nstyles Counter {\n  .counter {\n    text-align: center\n    padding: 1rem\n    border: 1px solid #ddd\n    border-radius: 8px\n    background: white\n    \n    h3 {\n      margin: 0 0 1rem 0\n      color: #2c3e50\n    }\n    \n    .buttons {\n      display: flex\n      gap: 0.5rem\n      justify-content: center\n      \n      button {\n        padding: 0.5rem 1rem\n        border: none\n        border-radius: 4px\n        background: #3498db\n        color: white\n        cursor: pointer\n        font-size: 1.2rem\n        min-width: 40px\n        \n        &:hover {\n          background: #2980b9\n        }\n        \n        &:active {\n          transform: translateY(1px)\n        }\n      }\n    }\n  }\n}`,\n      \n      'src/stores/AppStore.flux': `store AppStore {\n  state theme = \"light\"\n  state user = null\n  \n  action toggleTheme() {\n    theme = theme === \"light\" ? \"dark\" : \"light\"\n  }\n  \n  action setUser(userData) {\n    user = userData\n  }\n  \n  computed isLoggedIn() {\n    return user !== null\n  }\n  \n  computed greeting() {\n    return user ? \\`Hello, \\${user.name}!\\` : \"Welcome, guest!\"\n  }\n}`,\n      \n      '.flux/index.html': `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{projectName}}</title>\n    <style>\n        body {\n            margin: 0;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            background: #f5f5f5;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"../src/app.flux\"></script>\n</body>\n</html>`,\n      \n      'README.md': `# {{projectName}}\n\nA Flux application.\n\n## Development\n\n\\`\\`\\`bash\n# Start development server\nflux dev\n\n# Build for production\nflux build\n\\`\\`\\`\n\n## Project Structure\n\n- \\`src/\\` - Source code\n  - \\`app.flux\\` - Main application component\n  - \\`pages/\\` - Route components\n  - \\`components/\\` - Reusable components\n  - \\`stores/\\` - State management\n- \\`.flux/\\` - HTML shell and app entry\n- \\`public/\\` - Static assets (images, fonts, etc.)\n- \\`dist/\\` - Build output\n\n## Learn More\n\n- [Flux Documentation](https://flux-lang.dev)\n- [Flux Examples](https://github.com/flux-lang/examples)\n`\n    }\n  },\n  \n  minimal: {\n    name: 'Minimal Template',\n    description: 'Simple Flux application with basic structure',\n    files: {\n      'flux.config.js': `export default {\n  name: '{{projectName}}',\n  entry: 'src/app.flux',\n  output: 'dist',\n  appDir: '.flux',\n  publicDir: 'public'\n};`,\n      \n      'src/app.flux': `component App {\n  state message = \"Hello, Flux!\"\n  \n  method updateMessage() {\n    message = \"Hello, {{projectName}}!\"\n  }\n  \n  render {\n    <div>\n      <h1>{message}</h1>\n      <button @click={updateMessage}>Update Message</button>\n    </div>\n  }\n}\n\nmount(App, '#root')`,\n      \n      '.flux/index.html': `<!DOCTYPE html>\n<html>\n<head>\n    <title>{{projectName}}</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"../src/app.flux\"></script>\n</body>\n</html>`\n    }\n  }\n};\n\nexport async function createProject(projectName, templateName = 'default') {\n  const template = TEMPLATES[templateName];\n  \n  if (!template) {\n    throw new Error(`Unknown template: ${templateName}. Available templates: ${Object.keys(TEMPLATES).join(', ')}`);\n  }\n  \n  // Create project directory\n  const projectDir = path.resolve(process.cwd(), projectName);\n  \n  if (await fs.pathExists(projectDir)) {\n    throw new Error(`Directory ${projectName} already exists`);\n  }\n  \n  await fs.ensureDir(projectDir);\n  \n  console.log(`Creating project with template: ${template.name}`);\n  console.log(template.description);\n  \n  // Create template files\n  for (const [filePath, content] of Object.entries(template.files)) {\n    const fullPath = path.join(projectDir, filePath);\n    const dir = path.dirname(fullPath);\n    \n    await fs.ensureDir(dir);\n    \n    // Replace template variables\n    const processedContent = content.replace(/\\{\\{projectName\\}\\}/g, projectName);\n    \n    await fs.writeFile(fullPath, processedContent);\n    console.log(`Created: ${filePath}`);\n  }\n  \n  // Create package.json\n  const packageJson = {\n    name: projectName.toLowerCase().replace(/\\s+/g, '-'),\n    version: '1.0.0',\n    description: `A Flux application: ${projectName}`,\n    type: 'module',\n    scripts: {\n      dev: 'flux dev',\n      build: 'flux build',\n      start: 'flux dev'\n    },\n    dependencies: {\n      'flux-lang': '^1.0.0'\n    }\n  };\n  \n  await fs.writeFile(\n    path.join(projectDir, 'package.json'),\n    JSON.stringify(packageJson, null, 2)\n  );\n  \n  console.log('Created: package.json');\n  \n  // Create .gitignore\n  const gitignore = `node_modules/\ndist/\n.flux-cache/\n*.log\n.DS_Store\n`;\n  \n  await fs.writeFile(path.join(projectDir, '.gitignore'), gitignore);\n  console.log('Created: .gitignore');\n  \n  console.log(`\\n[ok] Project created successfully in ${projectDir}`);\n  console.log(`\\nNext steps:`);\n  console.log(`  cd ${projectName}`);\n  console.log(`  npm install`);\n  console.log(`  flux dev`);\n}"],
  "mappings": ";AAGA,OAAO,QAAQ;AACf,OAAO,UAAU;AACjB,SAAS,qBAAqB;AAE9B,IAAM,aAAa,cAAc,YAAY,GAAG;AAChD,IAAM,YAAY,KAAK,QAAQ,UAAU;AAEzC,IAAM,YAAY;AAAA,EAChB,SAAS;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,MACL,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYlB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoEhB,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA+BvB,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0CxB,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA8D/B,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAqB5B,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoBpB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA8Bf;AAAA,EACF;AAAA,EAEA,SAAS;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,MACL,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQlB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBhB,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUtB;AAAA,EACF;AACF;AAEA,eAAsB,cAAc,aAAa,eAAe,WAAW;AACzE,QAAM,WAAW,UAAU,YAAY;AAEvC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,qBAAqB,YAAY,0BAA0B,OAAO,KAAK,SAAS,EAAE,KAAK,IAAI,CAAC,EAAE;AAAA,EAChH;AAGA,QAAM,aAAa,KAAK,QAAQ,QAAQ,IAAI,GAAG,WAAW;AAE1D,MAAI,MAAM,GAAG,WAAW,UAAU,GAAG;AACnC,UAAM,IAAI,MAAM,aAAa,WAAW,iBAAiB;AAAA,EAC3D;AAEA,QAAM,GAAG,UAAU,UAAU;AAE7B,UAAQ,IAAI,mCAAmC,SAAS,IAAI,EAAE;AAC9D,UAAQ,IAAI,SAAS,WAAW;AAGhC,aAAW,CAAC,UAAU,OAAO,KAAK,OAAO,QAAQ,SAAS,KAAK,GAAG;AAChE,UAAM,WAAW,KAAK,KAAK,YAAY,QAAQ;AAC/C,UAAM,MAAM,KAAK,QAAQ,QAAQ;AAEjC,UAAM,GAAG,UAAU,GAAG;AAGtB,UAAM,mBAAmB,QAAQ,QAAQ,wBAAwB,WAAW;AAE5E,UAAM,GAAG,UAAU,UAAU,gBAAgB;AAC7C,YAAQ,IAAI,YAAY,QAAQ,EAAE;AAAA,EACpC;AAGA,QAAM,cAAc;AAAA,IAClB,MAAM,YAAY,YAAY,EAAE,QAAQ,QAAQ,GAAG;AAAA,IACnD,SAAS;AAAA,IACT,aAAa,uBAAuB,WAAW;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA,cAAc;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,EACF;AAEA,QAAM,GAAG;AAAA,IACP,KAAK,KAAK,YAAY,cAAc;AAAA,IACpC,KAAK,UAAU,aAAa,MAAM,CAAC;AAAA,EACrC;AAEA,UAAQ,IAAI,uBAAuB;AAGnC,QAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlB,QAAM,GAAG,UAAU,KAAK,KAAK,YAAY,YAAY,GAAG,SAAS;AACjE,UAAQ,IAAI,qBAAqB;AAEjC,UAAQ,IAAI;AAAA,uCAA0C,UAAU,EAAE;AAClE,UAAQ,IAAI;AAAA,YAAe;AAC3B,UAAQ,IAAI,QAAQ,WAAW,EAAE;AACjC,UAAQ,IAAI,eAAe;AAC3B,UAAQ,IAAI,YAAY;AAC1B;",
  "names": []
}
